game.states.EPI_Us = State{function ()
    description = [[ Us the intellect devourer at the epilogue party ]]
    modules = {"shared.moveto","shared.util","shared.math"}

    local campPoint = Entity("S_EPI_GaleDrinkingSpot_001_10e7dd38-4f07-4836-aea7-398f03bfbbdb")
    local sleepPoint = Entity("S_EPI_StartPointHalsin_133cd1e7-9c15-4593-84fa-e9b5cec484a2")
    local consumePoint = Entity("S_EPI_MintharaNearRiver_c9b9b1fa-1709-466a-9e1a-d2fafae024c0")

    local chair1 = Entity("S_EPI_Origins_CampfireSeatMain_d6bf8a18-8cee-4833-ae90-1b9f554378ea")
    local chair2 = Entity("FUR_GEN_Bench_Wood_Poor_A_016_fed41faa-1a66-4a60-84f3-5b3fd635776a")

    local usSleepStart = Animation("STAT_Sleep_Peace_01_Start_50079f9f-54e8-491a-8af2-95ba7a65847d")
    local usSleepLoop = Animation("STAT_Sleep_Peace_01_Loop_a53a9b3c-aed6-45b8-b40d-30c534a6d435")
    local usSleepEnd = Animation("STAT_Sleep_Peace_01_End_1a32a27f-b310-4d16-aaae-c92363c16f61")
    local consumeAnim = Animation("UTIL_Consume_01_88f95a55-7bc5-4f12-b507-d6569d745856")

    local idleAD = Dialog("EPI_Epilogue_AD_IdleUs_ada22b36-096c-c88c-fc0c-f7b74111367d")

    local generalADTimeout = 0
    local readyToZoom = true
    local wandering = false

    -- Helpers

    helpers.action.PlayLoopingAnimationAt = function(pos, animationStart, animationLoop, animationEnd, animationLength, endSleep, pauseBeforeDialog)
        if pos ~= nil then
            if animationStart ~= nil and animationLoop ~= nil and animationEnd ~= nil then
                if mod.moveto.MoveToPoint(pos, MovementSpeed.Walk, me, 0.5, false) then
                    LookFrom(pos)
                    helpers.TryPlayAD(pauseBeforeDialog)
                    PlayLoopingAnimation(animationStart, {animationLoop}, animationEnd)
                    Sleep(animationLength)
                    StopAnimation(me)
                    Sleep(endSleep)
                end
            end
        end
        wandering = true
        StartTimer(me,"Us_Wandering", math.random(30.0, 50.0), 0)
    end

    helpers.action.PlayAnimationAt = function(pos, animation, animationLength)
        if pos ~= nil then
            if mod.moveto.MoveToPoint(pos, MovementSpeed.Walk, me, 0.5, false) then
                LookFrom(pos)
                PlayAnimation(animation)
                Sleep(animationLength)
                StopAnimation(me)
                mod.util.SleepRandom(1.0,2.0)
            end
        end
        wandering = true
        StartTimer(me,"Us_Wandering", math.random(30.0, 50.0), 0)
    end

    helpers.action.SitOnChair = function()
            local selectedChair = nil
        if math.random(1, 2) == 1 then 
            selectedChair = chair1
        else 
            selectedChair = chair2
        end
        if me.IsReposed == false and selectedChair ~= nil then
            Sleep(1.0)
            if CanReposeOn(me, selectedChair) then
                try
                    UseItem(selectedChair.Item)
                    mod.util.SleepRandom(40.0, 60.0)
                    EndRepose(me)
                catch e if ls.CheckType(e, error.UseItemFailed) then
                    -- this code is so repetitive
                    wandering = true
                    StartTimer(me,"Us_Wandering", math.random(30.0, 50.0), 0)
                end
            else
                wandering = true
                StartTimer(me,"Us_Wandering", math.random(30.0, 50.0), 0)
            end
        else
            mod.util.SleepRandom(10.0,30.0)
            wandering = true
            StartTimer(me,"Us_Wandering", math.random(30.0, 50.0), 0)
        end
        wandering = true
        StartTimer(me,"Us_Wandering", math.random(30.0, 50.0), 0)
    end

    helpers.action.TryPlayAD = function(pauseBeforeDialog)
        if pauseBeforeDialog ~= nil then
                if generalADTimeout <= 0 then
                    generalADTimeout = 1
                    StartTimer(me,"Us_ADDelay", pauseBeforeDialog,0)
                    DebugText(me, "Playing AD")
                else
                    DebugText(me, "ADs on cooldown, [1] turns remaining", tostring(generalADTimeout))
                end
        else
            DebugText(me, "State without AD")
        end
        generalADTimeout = generalADTimeout - 1
    end

    -- Nodes

    nodes.ActiveMoves = Selector {
        CanEnter = function()
            return not wandering and not readyToZoom
        end,
        function(nodes)
            return FindDifferentRandomSelectable(nodes)
        end,
    }

    nodes.ActiveMoves.Sit = Action {
        function()
            Sleep(1.0)
            helpers.TryPlayAD(math.random(5.0, 20.0))
            helpers.SitOnChair()
            mod.util.SleepRandom(1.0, 3.0)
        end
    }

    nodes.ActiveMoves.Consume = Action {
        function()
            helpers.PlayAnimationAt(consumePoint, consumeAnim, 3.93333364)
        end,
    }

    nodes.ActiveMoves.Nap = Action {
        function()
            helpers.PlayLoopingAnimationAt(sleepPoint, usSleepStart, usSleepLoop, usSleepEnd, math.random(30.0, 50.0), 2, math.random(1.0, 4.0))
        end,
    }

    nodes.Zoomies = Action {
        function()
            Wander(12.0,5.0, MovementSpeed.Run, campPoint)
            Sleep(math.random(3, 4))
            StartTimer(me, "Us_Zoomies", math.random(40.0, 60.0), 0)
            readyToZoom = false
        end,
        Valid = function()
            return readyToZoom
        end
    }

    nodes.Wander = Action {
        Valid = function()
            return wandering
        end,
        function()
            Sleep(math.random(3,5))
            Wander(10.0,5.0, MovementSpeed.Stroll, campPoint)
        end
    }

    -- Events

    events.TimerFinished = function(e)
        if(e.TimerName == "Us_Wandering") then
            wandering = false
        elseif(e.TimerName == "Us_Zoomies") then
            readyToZoom = true
        elseif(e.TimerName == "Us_ADDelay") then
            StartAutomatedDialogImmediate(idleAD, me)
        end
    end

end
}